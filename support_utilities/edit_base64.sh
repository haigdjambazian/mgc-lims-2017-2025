list="2-961064,data:text/txt;base64,
2-961077,data:text/txt;base64,
2-961069,data:text/txt;base64,QXJ0aWZhY3QgSUQJRGF0YSBJRAlEYXRhIFJlbGVhc2UJUG9vbGluZyBUeXBlCVByb2plY3QgTmFtZQlQcm9qZWN0IElECVNhbXBsZSBOYW1lCVNhbXBsZSBJRAlMaWJyYXJ5IFR5cGUJTGlicmFyeSBJRAlDaElQLVNlcSBNYXJrCUxpYnJhcnkgS2l0IE5hbWUJTGlicmFyeSBTdHJhbmRlZG5lc3MJT3JpZ2luYWwgUnVuIEN5Y2xlcwlEZW11bHRpcGxleGluZyBDeWNsZXMJTWlzbWF0Y2ggU2V0dGluZwlQb29sIElECVBvb2wgTmFtZQlDYXB0dXJlIFR5cGUJQ2FwdHVyZSBCYWl0CVBvb2wgb24gRnJhY3Rpb24JUmVhZCBTZXQgSUQJRGF0YSBEaXJlY3RvcnkJTUQ1CUZpbGUgU2l6ZXMJUmVhZCBTZXQgU2l6ZQlGbG93Y2VsbCBJRAlSdW4gSUQJRmxvd2NlbGwgTGFuZQlSdW4gQ291bnQJUHJvY2Vzc2luZyBGb2xkZXIgTmFtZQlGbG93Y2VsbCBUeXBlCVJ1blR5cGUJSW5kZXggVHlwZQlRdWFsaXR5T2Zmc2V0CUNsdXN0ZXJzCUJhc2VzCUF2Zy4gUXVhbAlEdXAuIFJhdGUgKCUpCVN1Ym1pdHRlZCBTcGVjaWVzCVIxIFRvcCBCbGFzdCBIaXQgTmFtZQlSMSBUb3AgQmxhc3QgSGl0IFJhdGUgKCUpCVIyIFRvcCBCbGFzdCBIaXQgTmFtZQlSMiBUb3AgQmxhc3QgSGl0IFJhdGUgKCUpCVNwZWNpZXMgTWF0Y2ggUjEJU3BlY2llcyBNYXRjaCBSMglUb3AgU2FtcGxlIFRhZyBOYW1lCVRvcCBTYW1wbGUgVGFnIFJhdGUgZnJvbSBUb3RhbCAoJSkJVG9wIFNhbXBsZSBUYWcgUmF0ZSBmcm9tIEFsbCBEZXRlY3RlZCAoJSkJRXhwZWN0ZWQgU2FtcGxlIFRhZyBOYW1lCVRvcCBTYW1wbGUgVGFnIE5hbWUgTWF0Y2gJQ2x1c3RlcnMgb24gSW5kZXggaW4gTGFuZSAoJSkJQ2x1c3RlcnMgb24gSW5kZXggaW4gTGFuZSBmcm9tIFRhcmdldCAoJSkJRXhwZWN0ZWQgTGFuZSBGcmFjdGlvbglTYW1wbGUgT24gRnJhY3Rpb24JU2V4CURldGVjdGVkIFNleAlTdWJtaXR0ZWQgU2V4IE1hdGNoCXJSTkEgQkxBU1QgRGF0YWJhc2UJUjEgclJOQSBCTEFTVCBIaXRzCVIxIHJSTkEgQkxBU1QgVG90YWwJUjEgclJOQSBCTEFTVCBSYXRpbwlSMiByUk5BIEJMQVNUIEhpdHMJUjIgclJOQSBCTEFTVCBUb3RhbAlSMiByUk5BIEJMQVNUIFJhdGlvCWk3IEFkYXB0ZXIJaTUgQWRhcHRlcglSZWZlcmVuY2UJQmVkCVBGIFJlYWRzIEFsaWduZWQgQWxsCVBGIFJlYWRzIEFsaWduZWQgQWxsICglKQlQRiBSZWFkcyBBbGlnbmVkIFIxICglKQlQRiBSZWFkcyBBbGlnbmVkIFIyICglKQlDaGltZXJhcyAoJSkJQWRhcHRlciAoJSkJTWFwcGVkIEluc2VydCBTaXplIChtZWRpYW4pCU1hcHBlZCBJbnNlcnQgU2l6ZSAobWVhbikJTWFwcGVkIEluc2VydCBTaXplIChzdGQuIGRldi4pCUFsaWduZWQgRHVwLiBSYXRlICglKQlNZWFuIENvdmVyYWdlCUJhc2VzIENvdmVyZWQgYXQgMTB4ICglKQlCYXNlcyBDb3ZlcmVkIGF0IDI1eCAoJSkJQmFzZXMgQ292ZXJlZCBhdCA1MHggKCUpCUJhc2VzIENvdmVyZWQgYXQgNzV4ICglKQlCYXNlcyBDb3ZlcmVkIGF0IDEwMHggKCUpCUFsaWduZWQgQmFzZXMgT24gVGFyZ2V0ICglKQlPbiBCYWl0IEJhc2VzIGZyb20gT24gVGFyZ2V0IEJhc2VzICglKQlGcmVlbWl4IE51bWJlciBvZiBTTlAJRnJlZW1peCBWYWx1ZQljaHIxIE5vcm1hbGl6ZWQgQ292ZXJhZ2UJY2hyMiBOb3JtYWxpemVkIENvdmVyYWdlCWNocjMgTm9ybWFsaXplZCBDb3ZlcmFnZQljaHI0IE5vcm1hbGl6ZWQgQ292ZXJhZ2UJY2hyNSBOb3JtYWxpemVkIENvdmVyYWdlCWNocjYgTm9ybWFsaXplZCBDb3ZlcmFnZQljaHI3IE5vcm1hbGl6ZWQgQ292ZXJhZ2UJY2hyOCBOb3JtYWxpemVkIENvdmVyYWdlCWNocjkgTm9ybWFsaXplZCBDb3ZlcmFnZQljaHIxMCBOb3JtYWxpemVkIENvdmVyYWdlCWNocjExIE5vcm1hbGl6ZWQgQ292ZXJhZ2UJY2hyMTIgTm9ybWFsaXplZCBDb3ZlcmFnZQljaHIxMyBOb3JtYWxpemVkIENvdmVyYWdlCWNocjE0IE5vcm1hbGl6ZWQgQ292ZXJhZ2UJY2hyMTUgTm9ybWFsaXplZCBDb3ZlcmFnZQljaHIxNiBOb3JtYWxpemVkIENvdmVyYWdlCWNocjE3IE5vcm1hbGl6ZWQgQ292ZXJhZ2UJY2hyMTggTm9ybWFsaXplZCBDb3ZlcmFnZQljaHIxOSBOb3JtYWxpemVkIENvdmVyYWdlCWNocjIwIE5vcm1hbGl6ZWQgQ292ZXJhZ2UJY2hyMjEgTm9ybWFsaXplZCBDb3ZlcmFnZQljaHIyMiBOb3JtYWxpemVkIENvdmVyYWdlCWNoclggTm9ybWFsaXplZCBDb3ZlcmFnZQljaHJZIE5vcm1hbGl6ZWQgQ292ZXJhZ2UJY2hyTSBOb3JtYWxpemVkIENvdmVyYWdlCUludHJhZ2VuaWMgUmF0ZQlVbmlxdWUgUmF0ZSBvZiBNYXBwZWQJSW50ZXJnZW5pYyBSYXRlCVRyYW5zY3JpcHRzIERldGVjdGVkCUludHJvbmljIFJhdGUJTWFwcGVkIFVuaXF1ZSBSYXRlIG9mIFRvdGFsCUR1cGxpY2F0aW9uIFJhdGUgb2YgTWFwcGVkCUV4cHJlc3Npb24gUHJvZmlsaW5nIEVmZmljaWVuY3kJRW5kIDEgJSBTZW5zZQlFbmQgMiAlIFNlbnNlCUVzdGltYXRlZCBMaWJyYXJ5IFNpemUJclJOQSByYXRlCUNvbW1lbnRzCUV4dGVybmFsIFByb2plY3QgQ29kZQlCaWxsaW5nIFN0cmluZwlJbnZvaWNlIEZyYWN0aW9uCVByb2Nlc3NpbmcgdmVyc2lvbgoyLTk2MTA2OQkyLTk2MTA2OV8yLTc4Mjg3MgkwCUNhcHR1cmUJTVJDQQlMQVQ5MjEJTVJDQV8yNzg0NjcJTEFUOTIxQTM4NTMJV0dCUwkyLTc4Mjg3MglOL0EJTnhTZXEgQW1wRlJFRSBMb3cgRE5BIGxpYmFyeSBLaXQJbm9uLXN0cmFuZGVkCVkxMDEsSTgsSTgsWTEwMQlZMTAxLEk4LEk4LFkxMDEJMQkyLTkyODk4NAlNUkNBX01DQ1NlcV9DYXB0dXJlMDUwCU1DQy1TZXEJTUNDLVNlcTo6MTMxMDEwX0hHMTlfRUdfaW1tdW5lX0VQSSAoQUtBIEltbXVuZSBWMSkJCU1SQ0FfMjc4NDY3LjItNzgyODcyLkEwMDI2Nl8wNDQyLjQJL2xiL3JvYm90L3Jlc2VhcmNoL3Byb2Nlc3Npbmcvbm92YXNlcS8yMDIwLzIwMTIwNF9BMDAyNjZfMDQ0Ml9BSDNDQ05EU1hZX01SQ0FydW4yb2YyLW5vdmFzZXEvVW5hbGlnbmVkLjQvUHJvamVjdF9MQVQ5MjEvU2FtcGxlX01SQ0FfMjc4NDY3XzItNzgyODcyLE1SQ0FfMjc4NDY3XzItNzgyODcyX1MzMV9MMDA0X1IxXzAwMS5mYXN0cS5neixNUkNBXzI3ODQ2N18yLTc4Mjg3Ml9TMzFfTDAwNF9SMl8wMDEuZmFzdHEuZ3osCSwzZDIzYWJhZjZkYTQ5MGRkNWVkZGZkZjkxODUxODUyYyxiNjFhN2YyN2JiNTZiMzc0NDY1ODRhNjQxNjYwYjE3MiwJLDMwNDAsMzEzMCwJNjE3MAlIM0NDTkRTWFkJQTAwMjY2XzA0NDIJNAkJMjAxMjA0X0EwMDI2Nl8wNDQyX0FIM0NDTkRTWFlfTVJDQXJ1bjJvZjItbm92YXNlcQlTNAlQQUlSRURfRU5ECURVQUxfSU5ERVgJMzMJMzEJNjI2MgkzNi4yCTc0LjIJRXVrYXJ5b3RhOkhvbW8gc2FwaWVucyAoVGF4b24gSUQ6OTYwNikJRXVrYXJ5b3RpY19zeW50aGV0aWMJMjUuOAlFdWthcnlvdGljX3N5bnRoZXRpYwkyNS44CUZhbHNlCUZhbHNlCQkJCU4vQQkJMC4wMDAwMAkwLjAJMC4wMjc3OAlGYWxzZQlGCQkJCQkJCQkJCUFHQVRDR0dBQUdBR0NBQ0FDR1RDVEdBQUNUQ0NBR1RDQUMJQUdBVENHR0FBR0FHQ0dUQ0dUR1RBR0dHQUFBR0FHVEdUCUhvbW9fc2FwaWVuczpHUkNoMzgJCTE4CTI5LjAJMjkuMAkyOS4wCTU1LjU1NgkwLjAwMAkzMTIJMzEyLjAJMC4wCTU1LjYJMC4wCTAuMAkwLjAJMC4wCTAuMDAJMC4wMAkJCTMzMjI1MzcJMC4wMDAwMAkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCUxBVDkyMQkwCTAJTUdDIHByb2Nlc3NpbmcgcGlwZWxpbmUgdjUuMAoyLTk2MTA2OQkyLTk2MTA2OV8yLTc4Mjg3MwkwCUNhcHR1cmUJTVJDQQlMQVQ5MjEJTVJDQV8yNzg0ODkJTEFUOTIxQTM4NTQJV0dCUwkyLTc4Mjg3MwlOL0EJTnhTZXEgQW1wRlJFRSBMb3cgRE5BIGxpYmFyeSBLaXQJbm9uLXN0cmFuZGVkCVkxMDEsSTgsSTgsWTEwMQlZMTAxLEk4LEk4LFkxMDEJMQkyLTkyODk4NAlNUkNBX01DQ1NlcV9DYXB0dXJlMDUwCU1DQy1TZXEJTUNDLVNlcTo6MTMxMDEwX0hHMTlfRUdfaW1tdW5lX0VQSSAoQUtBIEltbXVuZSBWMSkJCU1SQ0FfMjc4NDg5LjItNzgyODczLkEwMDI2Nl8wNDQyLjQJL2xiL3JvYm90L3Jlc2VhcmNoL3Byb2Nlc3Npbmcvbm92YXNlcS8yMDIwLzIwMTIwNF9BMDAyNjZfMDQ0Ml9BSDNDQ05EU1hZX01SQ0FydW4yb2YyLW5vdmFzZXEvVW5hbGlnbmVkLjQvUHJvamVjdF9MQVQ5MjEvU2FtcGxlX01SQ0FfMjc4NDg5XzItNzgyODczLE1SQ0FfMjc4NDg5XzItNzgyODczX1MzMl9MMDA0X1IxXzAwMS5mYXN0cS5neixNUkNBXzI3ODQ4OV8yLTc4Mjg3M19TMzJfTDAwNF9SMl8wMDEuZmFzdHEuZ3osCSw2NTZlN2E4NDUxMjRlZjg2MDNjYTBhZTNjNjBhZGVlYyw1ZTNmNTBjM2IzZTM2ZmRiYzM4MzRkMmNlOWVmMGE5NCwJLDQwNzcsNDMxMywJODM5MAlIM0NDTkRTWFkJQTAwMjY2XzA0NDIJNAkJMjAxMjA0X0EwMDI2Nl8wNDQyX0FIM0NDTkRTWFlfTVJDQXJ1bjJvZjItbm92YXNlcQlTNAlQQUlSRURfRU5ECURVQUxfSU5ERVgJMzMJMzMJNjY2NgkzNS42CTMzLjMJRXVrYXJ5b3RhOkhvbW8gc2FwaWVucyAoVGF4b24gSUQ6OTYwNikJSG9tb19TYXBpZW5zCTkuMQlFdWthcnlvdGljX3N5bnRoZXRpYwkxOC4yCVRydWUJRmFsc2UJCQkJTi9BCQkwLjAwMDAwCTAuMAkwLjAyNzc4CUZhbHNlCUYJCQkJCQkJCQkJQUdBVENHR0FBR0FHQ0FDQUNHVENUR0FBQ1RDQ0FHVENBQwlBR0FUQ0dHQUFHQUdDR1RDR1RHVEFHR0dBQUFHQUdUR1QJSG9tb19zYXBpZW5zOkdSQ2gzOAkJMjQJMzYuNAk0Mi40CTMwLjMJMC4wMDAJMC4wMDAJNjE3CTUyMS40CTEzMC45CTQxLjcJMC4wCTAuMAkwLjAJMC4wCTAuMDAJMC4wMAkJCTMzMjI1MzcJMC4wMDAwMAkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCUxBVDkyMQkwCTAJTUdDIHByb2Nlc3NpbmcgcGlwZWxpbmUgdjUuMAoyLTk2MTA2OQkyLTk2MTA2OV8yLTc4Mjg3NAkwCUNhcHR1cmUJTVJDQQlMQVQ5MjEJTVJDQV8yNzg0NjYJTEFUOTIxQTM4NTUJV0dCUwkyLTc4Mjg3NAlOL0EJTnhTZXEgQW1wRlJFRSBMb3cgRE5BIGxpYmFyeSBLaXQJbm9uLXN0cmFuZGVkCVkxMDEsSTgsSTgsWTEwMQlZMTAxLEk4LEk4LFkxMDEJMQkyLTkyODk4NAlNUkNBX01DQ1NlcV9DYXB0dXJlMDUwCU1DQy1TZXEJTUNDLVNlcTo6MTMxMDEwX0hHMTlfRUdfaW1tdW5lX0VQSSAoQUtBIEltbXVuZSBWMSkJCU1SQ0FfMjc4NDY2LjItNzgyODc0LkEwMDI2Nl8wNDQyLjQJL2xiL3JvYm90L3Jlc2VhcmNoL3Byb2Nlc3Npbmcvbm92YXNlcS8yMDIwLzIwMTIwNF9BMDAyNjZfMDQ0Ml9BSDNDQ05EU1hZX01SQ0FydW4yb2YyLW5vdmFzZXEvVW5hbGlnbmVkLjQvUHJvamVjdF9MQVQ5MjEvU2FtcGxlX01SQ0FfMjc4NDY2XzItNzgyODc0LE1SQ0FfMjc4NDY2XzItNzgyODc0X1MzM19MMDA0X1IxXzAwMS5mYXN0cS5neixNUkNBXzI3ODQ2Nl8yLTc4Mjg3NF9TMzNfTDAwNF9SMl8wMDEuZmFzdHEuZ3osCSxmMDc3NGQ1Njg1OGVhZmFlMzJlNTNjMTFiM2NlODIwZSwzNTJiZDVlYmNjNjkxY2M2MWIxOTUzODIwZTlhOWI0ZSwJLDg4MSw5MDYsCTE3ODcJSDNDQ05EU1hZCUEwMDI2Nl8wNDQyCTQJCTIwMTIwNF9BMDAyNjZfMDQ0Ml9BSDNDQ05EU1hZX01SQ0FydW4yb2YyLW5vdmFzZXEJUzQJUEFJUkVEX0VORAlEVUFMX0lOREVYCTMzCTYJMTIxMgkzNS4xCTUwLjAJRXVrYXJ5b3RhOkhvbW8gc2FwaWVucyAoVGF4b24gSUQ6OTYwNikJRXVrYXJ5b3RpY19zeW50aGV0aWMJMTYuNwlFdWthcnlvdGljX3N5bnRoZXRpYwkxNi43CUZhbHNlCUZhbHNlCQkJCU4vQQkJMC4wMDAwMAkwLjAJMC4wMjc3OAlGYWxzZQlNCQkJCQkJCQkJCUFHQVRDR0dBQUdBR0NBQ0FDR1RDVEdBQUNUQ0NBR1RDQUMJQUdBVENHR0FBR0FHQ0dUQ0dUR1RBR0dHQUFBR0FHVEdUCUhvbW9fc2FwaWVuczpHUkNoMzgJCTIJMTYuNwkxNi43CTE2LjcJMC4wMDAJMC4wMDAJMzMJMzMuMAkwLjAJMC4wCTAuMAkwLjAJMC4wCTAuMAkwLjAwCTAuMDAJCQkzMzIyNTM3CTAuMDAwMDAJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQlMQVQ5MjEJMAkwCU1HQyBwcm9jZXNzaW5nIHBpcGVsaW5lIHY1LjAKMi05NjEwNjkJMi05NjEwNjlfMi03ODI4NzUJMAlDYXB0dXJlCU1SQ0EJTEFUOTIxCU1SQ0FfMjc4NDg4CUxBVDkyMUEzODU2CVdHQlMJMi03ODI4NzUJTi9BCU54U2VxIEFtcEZSRUUgTG93IEROQSBsaWJhcnkgS2l0CW5vbi1zdHJhbmRlZAlZMTAxLEk4LEk4LFkxMDEJWTEwMSxJOCxJOCxZMTAxCTEJMi05Mjg5ODQJTVJDQV9NQ0NTZXFfQ2FwdHVyZTA1MAlNQ0MtU2VxCU1DQy1TZXE6OjEzMTAxMF9IRzE5X0VHX2ltbXVuZV9FUEkgKEFLQSBJbW11bmUgVjEpCQlNUkNBXzI3ODQ4OC4yLTc4Mjg3NS5BMDAyNjZfMDQ0Mi40CS9sYi9yb2JvdC9yZXNlYXJjaC9wcm9jZXNzaW5nL25vdmFzZXEvMjAyMC8yMDEyMDRfQTAwMjY2XzA0NDJfQUgzQ0NORFNYWV9NUkNBcnVuMm9mMi1ub3Zhc2VxL1VuYWxpZ25lZC40L1Byb2plY3RfTEFUOTIxL1NhbXBsZV9NUkNBXzI3ODQ4OF8yLTc4Mjg3NSxNUkNBXzI3ODQ4OF8yLTc4Mjg3NV9TMzRfTDAwNF9SMV8wMDEuZmFzdHEuZ3osTVJDQV8yNzg0ODhfMi03ODI4NzVfUzM0X0wwMDRfUjJfMDAxLmZhc3RxLmd6LAksZTdiZTAwMGI2YzZkNTM2ZjI4MWNjYTIzYzQyNGM0Y2UsNTM1NzIxNzg5MjA1YmQzNjVhNjMwYTZiNzI5ZTg4ZDAsCSw2NDYsNjUyLAkxMjk4CUgzQ0NORFNYWQlBMDAyNjZfMDQ0Mgk0CQkyMDEyMDRfQTAwMjY2XzA0NDJfQUgzQ0NORFNYWV9NUkNBcnVuMm9mMi1ub3Zhc2VxCVM0CVBBSVJFRF9FTkQJRFVBTF9JTkRFWAkzMwk2CTEyMTIJMzUuNgk1MC4wCUV1a2FyeW90YTpIb21vIHNhcGllbnMgKFRheG9uIElEOjk2MDYpCQkJCQkJCQkJCU4vQQkJMC4wMDAwMAkwLjAJMC4wMjc3OAlGYWxzZQlNCQkJCQkJCQkJCUFHQVRDR0dBQUdBR0NBQ0FDR1RDVEdBQUNUQ0NBR1RDQUMJQUdBVENHR0FBR0FHQ0dUQ0dUR1RBR0dHQUFBR0FHVEdUCUhvbW9fc2FwaWVuczpHUkNoMzgJCTQJMzMuMwk2Ni43CTAuMAkwLjAwMAkwLjAwMAkJCQk3NS4wCTAuMAkwLjAJMC4wCTAuMAkwLjAwCTAuMDAJCQkzMzIyNTM3CTAuMDAwMDAJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQlMQVQ5MjEJMAkwCU1HQyBwcm9jZXNzaW5nIHBpcGVsaW5lIHY1LjAKMi05NjEwNjkJMi05NjEwNjlfMi03ODI4NzYJMAlDYXB0dXJlCU1SQ0EJTEFUOTIxCU1SQ0FfMjc4NTE4CUxBVDkyMUEzODU3CVdHQlMJMi03ODI4NzYJTi9BCU54U2VxIEFtcEZSRUUgTG93IEROQSBsaWJhcnkgS2l0CW5vbi1zdHJhbmRlZAlZMTAxLEk4LEk4LFkxMDEJWTEwMSxJOCxJOCxZMTAxCTEJMi05Mjg5ODQJTVJDQV9NQ0NTZXFfQ2FwdHVyZTA1MAlNQ0MtU2VxCU1DQy1TZXE6OjEzMTAxMF9IRzE5X0VHX2ltbXVuZV9FUEkgKEFLQSBJbW11bmUgVjEpCQlNUkNBXzI3ODUxOC4yLTc4Mjg3Ni5BMDAyNjZfMDQ0Mi40CS9sYi9yb2JvdC9yZXNlYXJjaC9wcm9jZXNzaW5nL25vdmFzZXEvMjAyMC8yMDEyMDRfQTAwMjY2XzA0NDJfQUgzQ0NORFNYWV9NUkNBcnVuMm9mMi1ub3Zhc2VxL1VuYWxpZ25lZC40L1Byb2plY3RfTEFUOTIxL1NhbXBsZV9NUkNBXzI3ODUxOF8yLTc4Mjg3NixNUkNBXzI3ODUxOF8yLTc4Mjg3Nl9TMzVfTDAwNF9SMV8wMDEuZmFzdHEuZ3osTVJDQV8yNzg1MThfMi03ODI4NzZfUzM1X0wwMDRfUjJfMDAxLmZhc3RxLmd6LAksZDZmOTk4N2UzOWQ5NTAyMjY2ZWVjNGJjMzNkOGUwZjgsMTdmNjk3YzhhY2IxODlhYzQ5ZjFiYjJmYWNjYjdjYTksCSwxODM3LDE4NzgsCTM3MTUJSDNDQ05EU1hZCUEwMDI2Nl8wNDQyCTQJCTIwMTIwNF9BMDAyNjZfMDQ0Ml9BSDNDQ05EU1hZX01SQ0FydW4yb2YyLW5vdmFzZXEJUzQJUEFJUkVEX0VORAlEVUFMX0lOREVYCTMzCTE2CTMyMzIJMzUuNgk2Mi41CUV1a2FyeW90YTpIb21vIHNhcGllbnMgKFRheG9uIElEOjk2MDYpCUhvbW9fU2FwaWVucwkxOC44CUhvbW9fU2FwaWVucwkxOC44CVRydWUJVHJ1ZQkJCQlOL0EJCTAuMDAwMDAJMC4wCTAuMDI3NzgJRmFsc2UJVQkJCQkJCQkJCQlBR0FUQ0dHQUFHQUdDQUNBQ0dUQ1RHQUFDVENDQUdUQ0FDCUFHQVRDR0dBQUdBR0NHVENHVEdUQUdHR0FBQUdBR1RHVAlIb21vX3NhcGllbnM6R1JDaDM4CQkxMwk0MC42CTMxLjIJNTAuMAkxMDAuMDAwCTAuMDAwCTQ5MjMwCTQ5MjMwLjAJMjY0NC42CTM4LjUJMC4wCTAuMAkwLjAJMC4wCTAuMDAJMC4wMAkJCTMzMjI1MzcJMC4wMDAwMAkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCUxBVDkyMQkwCTAJTUdDIHByb2Nlc3NpbmcgcGlwZWxpbmUgdjUuMAoyLTk2MTA2OQkyLTk2MTA2OV8yLTc4Mjg3NwkwCUNhcHR1cmUJTVJDQQlMQVQ5MjEJTVJDQV8yNzg1MDIJTEFUOTIxQTM4NTgJV0dCUwkyLTc4Mjg3NwlOL0EJTnhTZXEgQW1wRlJFRSBMb3cgRE5BIGxpYmFyeSBLaXQJbm9uLXN0cmFuZGVkCVkxMDEsSTgsSTgsWTEwMQlZMTAxLEk4LEk4LFkxMDEJMQkyLTkyODk4NAlNUkNBX01DQ1NlcV9DYXB0dXJlMDUwCU1DQy1TZXEJTUNDLVNlcTo6MTMxMDEwX0hHMTlfRUdfaW1tdW5lX0VQSSAoQUtBIEltbXVuZSBWMSkJCU1SQ0FfMjc4NTAyLjItNzgyODc3LkEwMDI2Nl8wNDQyLjQJL2xiL3JvYm90L3Jlc2VhcmNoL3Byb2Nlc3Npbmcvbm92YXNlcS8yMDIwLzIwMTIwNF9BMDAyNjZfMDQ0Ml9BSDNDQ05EU1hZX01SQ0FydW4yb2YyLW5vdmFzZXEvVW5hbGlnbmVkLjQvUHJvamVjdF9MQVQ5MjEvU2FtcGxlX01SQ0FfMjc4NTAyXzItNzgyODc3LE1SQ0FfMjc4NTAyXzItNzgyODc3X1MzNl9MMDA0X1IxXzAwMS5mYXN0cS5neixNUkNBXzI3ODUwMl8yLTc4Mjg3N19TMzZfTDAwNF9SMl8wMDEuZmFzdHEuZ3osCSwyZTdkNGQ3MWNkZGVlMjE3MzAzZDhjYzE3OTA5Yzc0NyxlZTQ5MzY3NzI3OTc0YmFjOWNjZjNmYTc0NjFiODQ5NSwJLDMxNTcsMzE3MywJNjMzMAlIM0NDTkRTWFkJQTAwMjY2XzA0NDIJNAkJMjAxMjA0X0EwMDI2Nl8wNDQyX0FIM0NDTkRTWFlfTVJDQXJ1bjJvZjItbm92YXNlcQlTNAlQQUlSRURfRU5ECURVQUxfSU5ERVgJMzMJMjUJNTA1MAkzNS4wCTM2LjAJRXVrYXJ5b3RhOkhvbW8gc2FwaWVucyAoVGF4b24gSUQ6OTYwNikJSG9tb19TYXBpZW5zCTguMAlQYW5fdHJvZ2xvZHl0ZXMJMTYuMAlUcnVlCUZhbHNlCQkJCU4vQQkJMC4wMDAwMAkwLjAJMC4wMjc3OAlGYWxzZQlVCQkJCQkJCQkJCUFHQVRDR0dBQUdBR0NBQ0FDR1RDVEdBQUNUQ0NBR1RDQUMJQUdBVENHR0FBR0FHQ0dUQ0dUR1RBR0dHQUFBR0FHVEdUCUhvbW9fc2FwaWVuczpHUkNoMzgJCTE2CTMyLjAJMzIuMAkzMi4wCTAuMDAwCTAuMDAwCTI4OQkyNzMuMwkyNy4xCTM3LjUJMC4wCTAuMAkwLjAJMC4wCTAuMDAJMC4wMAkJCTMzMjI1MzcJMC4wMDAwMAkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCUxBVDkyMQkwCTAJTUdDIHByb2Nlc3NpbmcgcGlwZWxpbmUgdjUuMAo="

IFS=$'\n'

for el in $(echo "$list"); do

    el1=$(echo "$el" | awk -F',' '{print $1}')
    el2=$(echo "$el" | awk -F',' '{print $2}')
    el3=$(echo "$el" | awk -F',' '{print $3}')

    echo "$el3" | base64 -d > $el1.txt
    nano $el1.txt

    cat $el1 | base64 | tr -d '\n' > $el1.b

    file=$el1.b
    echo "$file" | mailx -s "$file" -a "$file" -r "abacus.genome@mail.mcgill.ca" haig.djambazian@mcgill.ca; done

    
done 

